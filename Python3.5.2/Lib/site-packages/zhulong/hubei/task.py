from zhulong.hubei import enshi
from zhulong.hubei import huanggang
from zhulong.hubei import huangshi
from zhulong.hubei import jingmen

from zhulong.hubei import shiyan
from zhulong.hubei import suizhou
from zhulong.hubei import xiangyang
from zhulong.hubei import yichang
from lmf.dbv2 import db_command 


from os.path import join ,dirname 

import time 

def get_profile():
    path1=join(dirname(__file__),'profile')
    with open(path1,'r') as f:
        p=f.read()
    
    return p


def write_profile(txt):
    path1=join(dirname(__file__),'profile')
    with open(path1,'w') as f:
        f.write(txt)


def get_conp(txt):
    x=_conp+','+txt
    arr=x.split(',')
    return arr

_conp=get_profile()

#1
def task_enshi(**args):
    conp=get_conp(enshi._name_)
    enshi.work(conp,**args)

#2
def task_huanggang(**args):
    conp=get_conp(huanggang._name_)
    huanggang.work(conp,**args)

#3
def task_huangshi(**args):
    conp=get_conp(huangshi._name_)
    huangshi.work(conp,**args)

#4
def task_jingmen(**args):
    conp=get_conp(jingmen._name_)
    jingmen.work(conp,**args)

#5
def task_shiyan(**args):
    conp=get_conp(shiyan._name_)
    shiyan.work(conp,**args)

#6
def task_suizhou(**args):
    conp=get_conp(suizhou._name_)
    suizhou.work(conp,**args)

#7
def task_xiangyang(**args):
    conp=get_conp(xiangyang._name_)
    xiangyang.work(conp,**args)

#8
def task_yichang(**args):
    conp=get_conp(yichang._name_)
    yichang.work(conp,**args)




def task_all():

    task_enshi()
    task_huanggang()
    task_huangshi()
    task_jingmen()

    task_shiyan()
    task_suizhou()
    task_xiangyang()
    task_yichang()




def create_schemas():
    conp=get_conp('public')
    arr=["enshi","huanggang","huangshi","jingmen","shiyan","suizhou"
        ,"xiangyang","yichang"
    ]
    for diqu in arr:
        sql="create schema if not exists %s"%diqu
        db_command(sql,dbtype="postgresql",conp=conp)

    
